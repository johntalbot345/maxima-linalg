/* vim: ft=maxima
*/

/* generic unit tests */

/* apply function to each list of arguments in inputs in turn. If the output isn't
 * equal to the corresponding element of outputs, display the input,
 * expected output, actual output
 */
unitTests(function, inputs, outputs) := block([i, actualOutput, expectedOutput, flag],
    flag : true,
    for i : 1 thru length(inputs) do (
        actualOutput : apply(function, inputs[i]),
        expectedOutput : outputs[i],
        if actualOutput # expectedOutput then (
            flag : false,
            print("test failed. input:", inputs[i], "expected output:", expectedOutput, "actual output:", actualOutput)
        )
    ),
    if flag then "all tests passed"
);

/* example:
 * f(x, y) := x + y ;
 * ip : [[-1, 1], [1, 2], [2, 3]];
 * op : [0, 3, 4, 8];
 * unittests(f, ip, op);
 * will print an error message because f(ip[3]) # op[3]
 */

